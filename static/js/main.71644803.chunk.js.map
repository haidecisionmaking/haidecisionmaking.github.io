{"version":3,"sources":["data.js","SurveyTable.js","App.js","index.js"],"names":["data","paper","paper_link","venue","year","authors","ai_model","ai_assistance_element","actual_task","ai_task_type","dataset_type","task_eval_metric","ai_eval_metric","key","SurveyTable","state","searchText","searchedColumn","getColumnSearchProps","dataIndex","filterDropdown","_ref","setSelectedKeys","selectedKeys","confirm","clearFilters","react_default","a","createElement","style","padding","input","ref","node","_this","searchInput","placeholder","concat","value","onChange","e","target","onPressEnter","handleSearch","marginBottom","display","space","es_button","type","onClick","icon","SearchOutlined","size","width","handleReset","closeDropdown","setState","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","split","filter","item","length","map","main_default","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","something","columns","Object","objectSpread2","title","fixed","this","sorter","compare","b","multiple","filters","table","dataSource","bordered","pagination","scroll","x","y","React","Component","App","current","Home","SurveyTable_SurveyTable","About","margin","paddingBottom","href","textAlign","react_router_dom","menu","handleClick","mode","Item","HomeOutlined","to","SmileOutlined","react_router","path","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.71644803.chunk.js","sourcesContent":["const data = [\n{\n  paper: 'Are Explanations Helpful? A Comparative Study of the Effects of Explanations in AI-Assisted Decision-Making',\n  paper_link: '',\n  venue: 'IUI',\n  year: 2021,\n  authors: 'Xinru Wang, Ming Yin',\n  ai_model: 'GAM',\n  ai_assistance_element: 'prediction; local feature importance; example-based explanations; counterfactual explanations; global feature importance',\n  actual_task: 'recidivism prediction; forest cover prediction',\n  ai_task_type: 'discovery',\n  dataset_type: 'tabular',\n  task_eval_metric: '',\n  ai_eval_metric: 'understanding (self-rated understanding, forward simulation, counterfactual simulation, model errors detection, comprehension quiz); reliance/trust (model confidence acceptance, agreement/acceptance of model suggestions, over reliance, under reliance, appropriate reliance)',\n  key: '1', // own reference, not visualizing\n},\n{\n  paper: 'Assessing the Local Interpretability of Machine Learning Models',\n  venue: 'arXiv',\n  year: 2019,\n  authors: 'Dylan Slack, Sorelle Friedler, Carlos Scheidegger, Chitradeep Roy',\n  ai_model: 'rule-based methods; GAM; NN',\n  ai_assistance_element: 'counterfactual explanations; presentation of simple models',\n  actual_task: 'synthetic dataset',\n  ai_task_type: 'discovery',\n  dataset_type: 'tabular',\n  task_eval_metric: 'efficiency (time taken on the task)',\n  ai_eval_metric: '',\n  key: '2', // own reference, not visualizing\n},\n{\n  paper: 'Interpretable Decision Sets: A Joint Framework for Description and Prediction',\n  venue: 'KDD',\n  year: 2016,\n  authors: 'Himabindu Lakkaraju, Stephen H. Bach, Jure Leskovec',\n  ai_model: 'rule-based methods',\n  ai_assistance_element: 'rule-based; presentation of simple models',\n  actual_task: 'bail outcome prediction; medical diagnosis',\n  ai_task_type: 'discovery',\n  dataset_type: 'tabular',\n  task_eval_metric: 'efficiency (time taken on the task); task satisfaction and mental demand (number of words in user feedback)',\n  ai_eval_metric: '',\n  key: '3', // own reference, not visualizing\n},\n{\n  paper: 'The effects of example-based explanations in a machine learning interface',\n  venue: 'IUI',\n  year: 2019,\n  authors: 'Carrie J. Cai, Jonas Jongejan, Jess Holbrook',\n  ai_model: 'DNN',\n  ai_assistance_element: 'prediction; example-based explanations',\n  actual_task: 'picture guessing',\n  ai_task_type: 'discovery',\n  dataset_type: 'image',\n  task_eval_metric: '',\n  ai_eval_metric: 'understand (self-rated understanding); satisfaction and usability (time spent on application); others (attribution to AI vs. self)',\n  key: '4', // own reference, not visualizing\n},\n{\n  paper: 'What can AI do for me: Evaluating Machine Learning Interpretations in Cooperative Play',\n  venue: 'IUI',\n  year: 2019,\n  authors: 'Shi Feng, Jordan Boyd-Graber',\n  ai_model: 'linear model',\n  ai_assistance_element: 'prediction; model uncertainty; local feature importance; example-based explanations',\n  actual_task: 'quiz bowl',\n  ai_task_type: 'discovery',\n  dataset_type: 'text',\n  task_eval_metric: 'efficacy (accuracy/error)',\n  ai_eval_metric: '',\n  key: '5', // own reference, not visualizing\n},\n]\n\nexport default data;","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\n\nimport data from './data'\n\nexport default class SurveyTable extends React.Component {\n  state = {\n    searchText: '',\n    searchedColumn: '',\n  };\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n          <Button\n            type=\"link\"\n            size=\"small\"\n            onClick={() => {\n              confirm({ closeDropdown: false });\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex,\n              });\n            }}\n          >\n            Filter\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n        : '',\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    // render: text =>\n    //   this.state.searchedColumn === dataIndex ? (\n    //     <Highlighter\n    //       highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n    //       searchWords={[this.state.searchText]}\n    //       autoEscape\n    //       textToHighlight={text ? text.toString() : ''}\n    //     />\n    //   ) : (\n    //     text\n    //   ),\n    render: text => {\n      if (dataIndex === \"ai_model\" || dataIndex === \"ai_assistance_element\" || dataIndex === \"actual_task\" || dataIndex === \"task_eval_metric\" || dataIndex === \"ai_eval_metric\") {\n        const data = text.split(\";\").filter(item => item);\n        if (data.length === 0) return null;\n        return this.state.searchedColumn === dataIndex ? (\n          <ul style={{ padding: \"0 0 0 20px\" }}>{data.map((item) => {\n            return <li key={item}>{<Highlighter\n              highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n              searchWords={[this.state.searchText]}\n              autoEscape\n              textToHighlight={item ? item.toString() : ''}\n            />}</li>\n          })}</ul>\n        ) : (<ul style={{ padding: \"0 0 0 20px\" }}>{data.map((item) => { return <li key={item}>{item}</li> })}</ul>);\n      }\n      return this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n      ) : (\n        text\n      )\n    },\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  something= (text) => {\n    return <div>text</div>\n  }\n\n  render() {\n    const columns = [\n      {\n        title: \"Paper\",\n        dataIndex: \"paper\",\n        key: \"paper\",\n        width: 150,\n        fixed: \"left\",\n        ...this.getColumnSearchProps(\"paper\")\n      },\n      {\n        title: \"Authors\",\n        dataIndex: \"authors\",\n        key: \"authors\",\n        width: 100,\n        ...this.getColumnSearchProps(\"authors\")\n      },\n      {\n        title: \"Venue\",\n        dataIndex: \"venue\",\n        key: \"venue\",\n        width: 60,\n        ...this.getColumnSearchProps(\"venue\")\n      },\n      {\n        title: \"Year\",\n        dataIndex: \"year\",\n        key: \"year\",\n        width: 60,\n        sorter: {\n          compare: (a, b) => a.year - b.year,\n          multiple: 1,\n        },\n      },\n      {\n        title: \"AI model\",\n        dataIndex: \"ai_model\",\n        key: \"ai_model\",\n        // render: text => {return <ul>{text.split(\";\").map((idx, item) => {return <li key={idx}>item</li>})}</ul>},\n        width: 100,\n        ...this.getColumnSearchProps(\"ai_model\"),\n        // render: text => {\n        //   const data = text.split(\";\").filter(item => item);\n        //   if (data.length === 0) {\n        //     return null;\n        //   }\n        //   return <ul style={{ padding: \"0 0 0 20px\" }}>{text.split(\";\").map((item) => { return <li key={item}>{item}</li> })}</ul>\n        // },\n      },\n      {\n        title: \"AI assistance element\",\n        dataIndex: \"ai_assistance_element\",\n        key: \"ai_assistance_element\",\n        width: 200,\n        ...this.getColumnSearchProps(\"ai_assistance_element\"),\n        // render: text => {\n        //   const data = text.split(\";\").filter(item => item);\n        //   if (data.length === 0) {\n        //     return null;\n        //   }\n        //   return <ul style={{ padding: \"0 0 0 20px\" }}>{text.split(\";\").map((item) => { return <li key={item}>{item}</li> })}</ul>\n        // },\n      },\n      {\n        title: \"Task\",\n        dataIndex: \"actual_task\",\n        key: \"actual_task\",\n        width: 150,\n        ...this.getColumnSearchProps(\"actual_task\"),\n        // render: text => {\n        //   const data = text.split(\";\").filter(item => item);\n        //   if (data.length === 0) {\n        //     return null;\n        //   }\n        //   return <ul style={{ padding: \"0 0 0 20px\" }}>{text.split(\";\").map((item) => { return <li key={item}>{item}</li> })}</ul>\n        // },\n      },\n      {\n        title: \"AI task type\",\n        dataIndex: \"ai_task_type\",\n        key: \"ai_task_type\",\n        width: 80,\n        ...this.getColumnSearchProps(\"ai_task_type\")\n      },\n      {\n        title: \"Dataset type\",\n        dataIndex: \"dataset_type\",\n        key: \"dataset_type\",\n        width: 80,\n        filters: [\n          { text: 'tabular', value: 'tabular' },\n          { text: 'text', value: 'text' },\n          { text: 'image', value: 'image' },\n        ],\n        // ...this.getColumnSearchProps(\"dataset_type\")\n      },\n      {\n        title: \"Task evaluation metric\",\n        dataIndex: \"task_eval_metric\",\n        key: \"task_eval_metric\",\n        width: 200,\n        ...this.getColumnSearchProps(\"task_eval_metric\"),\n        // render: text => {\n        //   const data = text.split(\";\").filter(item => item);\n        //   if (data.length === 0) {\n        //     return null;\n        //   }\n        //   return <ul style={{ padding: \"0 0 0 20px\" }}>{text.split(\";\").map((item) => { return <li key={item}>{item}</li> })}</ul>\n        // },\n      },\n      {\n        title: \"AI evaluation metric\",\n        dataIndex: \"ai_eval_metric\",\n        key: \"ai_eval_metric\",\n        width: 200,\n        ...this.getColumnSearchProps(\"ai_eval_metric\"),\n        // render: text => {\n        //   const data = text.split(\";\").filter(item => item);\n        //   if (data.length === 0) {\n        //     return null;\n        //   }\n        //   return <ul style={{ padding: \"0 0 0 20px\" }}>{text.split(\";\").map((item) => { return <li key={item}>{item}</li> })}</ul>\n        // },\n      },\n    ];\n    return <Table columns={columns} \n                  dataSource={data}\n                  bordered\n                  size=\"middle\"\n                  pagination={false}\n                  style={{padding: \"40px 65px 50px 65px\"}}\n                  scroll={{ x: \"calc(700px + 50%)\", y: 700 }} />;\n  }\n}","import React from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Input, Button, Space, Menu } from \"antd\";\nimport { SearchOutlined, HomeOutlined, SmileOutlined } from \"@ant-design/icons\";\nimport Highlighter from \"react-highlight-words\";\n\nimport SurveyTable from \"./SurveyTable\"\n\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\n\n\nexport default class App extends React.Component {\n  state = {\n    current: \"home\"\n  };\n\n  render() {\n\n    function Home() {\n      return <SurveyTable />\n    }\n\n    function About() {\n      return <div style={{padding: \"40px 65px 50px 65px\", width: \"50%\", margin: \"auto\"}} >\n              <div><h3>Towards a Science of Human-AI Decision Making: A Survey of Empirical Studies</h3></div>\n              <div style={{paddingBottom: \"15px\"}}><h4>\n                <a href=\"https://vivlai.github.io/\" target=\"_blank\">Vivian Lai</a>, <a href=\"https://chacha-chen.github.io/\" target=\"_blank\">Chacha Chen</a>, <a href=\"http://qveraliao.com/\" target=\"_blank\">Q. Vera Liao</a>, <a href=\"https://alisonmsmith.github.io/\" target=\"_blank\">Alison Smith-Renner</a>, <a href=\"https://chenhaot.com/\" target=\"_blank\">Chenhao Tan</a>\n              </h4></div>\n\n              <p style={{textAlign: \"justify\", marginBottom: \"15px\"}}>\n                As AI systems demonstrate increasingly strong predictive performance, their adoption has grown in numerous domains.  \n                However, in high-stakes domains such as criminal justice and healthcare, full automation is often not desirable due to safety, ethical, and legal concerns, yet fully manual approaches can be inaccurate and time consuming. \n                As a result, there is growing interest in the research community to augment human decision making with AI assistance. \n                Besides developing AI technologies for this purpose, the emerging field of human-AI decision making must embrace empirical approaches to form a foundational understanding of how humans interact and work with AI to make decisions.  \n                To invite and help structure research efforts towards a science of understanding and improving human-AI decision making, we survey recent literature of empirical human-subject studies on this topic. \n                We summarize the study design choices made in over 100 papers in three important aspects: 1) decision tasks, 2) AI models and AI assistance elements, and 3) evaluation metrics.\n                For each aspect, we summarize current trends, discuss gaps in existing literature, and make a list of recommendations for future research.\n                Our survey highlights the need to develop common frameworks to account for the design and research spaces of human-AI decision making, so that researchers can make rigorous choices in study design, and the research community can build on each other's work and produce generalizable scientific knowledge. \n                We also hope this survey will serve as a bridge for HCI and AI communities to work together to mutually shape the empirical science and computational technologies for human-AI decision making.\n                <br /><br />\n\n                Read the full survey <a href=\"#\" target=\"_blank\">here.</a>\n              </p>\n             </div>\n    }\n\n    const { current } = this.state;\n\n    return (\n      <Router>\n      <div>\n        <Menu\n          onClick={this.handleClick}\n          selectedKeys={[current]}\n          mode=\"horizontal\"\n          style={{padding: \"15px 50px 0px 50px\"}} \n        >\n          <Menu.Item key=\"home\" icon={<HomeOutlined />}>\n            <Link to=\"/home\">Home</Link>\n          </Menu.Item>\n          <Menu.Item key=\"app\" icon={<SmileOutlined />}>\n            <Link to=\"/about\">About</Link>\n          </Menu.Item>\n        </Menu>\n\n        <Switch>\n          <Route path=\"/home\"><Home /></Route>\n          <Route path=\"/about\"><About /></Route>\n          <Route path=\"/\"><About /></Route>\n        </Switch>\n      </div>\n      </Router>\n    );\n  }\n}\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}